global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
           - localhost:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files: 
   - "rules/node_exporter_alerts.yaml"
   - "rules/alerts.yaml"
   - "rules/alerts2.yaml"
   - "rules/alerts3.yaml"
   - "rules/node_rules.yaml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]
  - job_name: "application-server_1"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["10.2.6.159:9100"]
        labels:
          task: node_exporter
          instance_type: amazonlinux2
  - job_name: "application-server_2"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["10.2.10.12:9100"]
        labels:
          task: node_exporter
          instance_type: amazonlinux2
  - job_name: "sd_test"
    ec2_sd_configs:
      - port: 9090
        region: ap-northeast-1
        refresh_interval: 60s
        access_key: <> 
        secret_key: <>
        filters:
        - name: tag:Env
          values:
          - prometheus*
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name, __meta_ec2_private_ip]
        target_label: instance
      - source_labels: [__meta_ec2_tag_Env]
        regex: prometheus*
        action: keep
      - source_labels: [__meta_ec2_public_ip]
        replacement: $1:9100
        target_label: __address__
      - source_labels: [__meta_ec2_tag_Env]
        target_label: test
      - source_labels: [__meta_ec2_tag_Env, __meta_ec2_tag_Name]
        separator: "@"
        regex: "(.*)@(.*)"
        replacement: "${1}/${2}_test_label"
        target_label: test_label
        action: replace
        